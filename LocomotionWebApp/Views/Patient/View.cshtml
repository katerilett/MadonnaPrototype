@model LocomotionWebApp.Models.ViewModels.PatientViewModel


@section Title
{
	Patient
	
}

@section Scripts
{ 
	<script type="text/javascript">
		function openTab() {
			var tab;

			var searchString = window.location.search.substring(1),
				i, val, params = searchString.split("&");

			for (i = 0; i < params.length; i++) {
				val = params[i].split("=");
				if (val[0] == "tab") {
					tab = val[1];
				}
			}

			if (tab == "1") {
				openEditBar();
			}
			else if (tab == "2") {
				openReport();
			}
		};
	</script>

	<script type="text/javascript">	

	@*	function openReport() {
			if(!$("#to-report-btn").hasClass("active")) {
				$("#report-pullover .modal-body")
					.html('<div style="text-align: center;"><img src="/Content/img/ajax-loader.gif" /></div>');
				$("#report-pullover .modal-body")
					.load("@Url.Action("View", "Report", new { id=Model.ID })");
				hideSidebar();
				showPullover();
				$("#to-report-btn").addClass("active");
			} else {
				hidePullover();
				$("#header .sidebar-group .btn").removeClass("active");
			}
		}*@

		$(function() {
			//$("#edit-sidebar-btn").click(openEditBar);
			//$("#optimize-sidebar-btn").click(openOptimizationBar);
			//$("#to-report-btn").click(openReport);

			//$("#links-tab-btn").click(function () {
			//	loadLinkNetwork();
			//});

			//$("#orders-tab-btn").click(openReport);

			//$("#links-tab-btn").click(function () {
			//loadLinkNetwork();
			//});

			//$("#orders-tab-btn").click(function () {
			//loadOrderNetwork();
			//});			

			//$(".netview-modal-btn").click(function (e) {
			//	var target = $(e.target).attr("data-name");
			//	if($(e.target).hasClass("set-links") && currentMode != LINKS)
			//		loadLinkNetwork();
			//	if($(e.target).hasClass("set-orders") && currentMode != ORDERS)
			//		loadOrderNetwork();
			//	activateForm(target);
			//	return false;
			//});

			$("#links-tab-btn").click(function () {
				viewingOrders = false;
			});

			$("#orders-tab-btn").click(function () {
				viewingOrders = true;
			});
			
			resizePullover();
			openTab();
		});

		function activateForm(target) {
			var title = $("#"+target+" .modal-header h3").html();
			var body = $("#"+target+" .modal-body").html();
			var buttons = $("#"+target+" .modal-footer").html();

			var formobj = $("#"+target).closest("form");
			var action = formobj.attr("action");

			var passByAjax = $("#"+target+" .modal-footer").attr("data-ajax");
			if(passByAjax == undefined)
				passByAjax = true;

			$("#jsModal .CheckBox").val(true);

			popupModalFullHtml(title, body, buttons);

			$("#jsModalForm").attr("action", action);

			$("#jsModalForm").unbind("submit");
			if(passByAjax == true) {
				$("#jsModalForm").submit(function (e) {

					e.preventDefault();
					var formdata = $("#jsModalForm").serializeArray();

					$.post(action,
						formdata,
						function(data, status, jqXHR) {
							if (data.success) {
								infoWindow.close();
								loadPatient();
								loadOptimization();
								if (addingAnother) {
								} else {
									$("#jsModal").modal("hide");
								}
								addingAnother = false;
							}
						}
					);
				});
			}
		}

		function resizePullover() {
			var headerHeight = $("#header").outerHeight();
			var winHeight = $(window).height() - headerHeight;
			$("#report-pullover").css("top", headerHeight);
			$("#report-pullover").css("height", winHeight);
		}
		function showPullover() {
			$("#report-pullover").slideDown();
		}
		function hidePullover() {
			$("#report-pullover").slideUp();
			$("#to-report-btn").removeClass("active");
		
		}
		$(window).resize(resizePullover);


	</script>

}

@*@section NextToLogo
{
	<p class="nav navbar-text" style="color: #000;">
		<em>@Html.Raw(Model.Name)</em>
		@if(Model.Revision != 0)
		{
			<td><a href="#" onclick="popupModalUrl(
				'@Html.Raw(Model.Name) History',
				'@Url.Action("NetworkHistory", "Network", new { id = Model.ID })' )" class="">
				(@Html.DisplayFor(net => Model.Revision) Previous Versions)
			</a></td>
		}
		else
		{ 
			<td> @Html.DisplayFor(net => Model.Revision) Previous Versions </td>
		}
	</p>
}*@ 

@section Header
{
	<div class="btn-group sidebar-group">
	@*@if (Html.Action("Access", "Account").ToString().Equals("Administrator") == true || Html.Action("Access", "Account").ToString().Equals("Operations") == true) 
	{
		<a href="#" id="edit-sidebar-btn" class="btn">Edit</a>
	}
	 <a href="#" id="optimize-sidebar-btn" class="btn">
		Optimize
	</a>*@ 
	@*<a href="#" id="to-report-btn" class="btn">Report</a>*@
	
	<a href="@Url.Action("Report", "Patient", new { id=Model.ID })"
					class="btn">Report</a>
	</div>
	
	@*</div>
	<i class="icon-search icon-white" style="margin-left: 12px; margin-top: 5px;"></i>
	<div class="btn-group">
		<a href="#" class="btn" id="show-links-btn">Profile</a>
		<a href="@Url.Action("Index", "Result", new { id=Model.ID })"
					class="btn">Report</a>
	</div>*@

	@*<div class="pull-right">
		<a href="@Url.Action("SaveNetwork", "Network", new { ID = Model.ID })"
			class="btn btn-primary">Save</a>
		<a href="#" class="btn netview-modal-btn"
			data-name="saveModal">Save As...</a>
	</div>*@
}



@using(Html.BeginForm("SavePatientAs", "Patient", FormMethod.Post, new { enctype = "multipart/form-data" }))
{ 
	{
<!-- save network Modal -->
@*<div id="saveModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-header">
	<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
	<h3 id="saveModalLabel">Save Network</h3>
  </div>
  <div class="modal-body">
	<div class="control-group">				
				<label class="control-label" for="name">Network Name</label>
				<div class="controls">					
						@Html.TextBoxFor(m => Model.Name, new { required ="true", placeholder = "Name" })
					<span class="text-error">@Html.ValidationMessageFor(m => Model.Name)</span>	
				</div>
			</div>
			
			<div class="control-group">
				<label class="control-label" for="NetworkID"></label>
				<div class="controls">
						@Html.HiddenFor(m => Model.ID, new { placeholder = @Model.ID})
				</div>
			</div>


  </div>

  <div class="modal-footer" data-ajax="false">
	<button type="button" class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
	<button type="submit" class="btn btn-primary">Save changes</button>
  </div>
</div>*@
}
}

@using(Html.BeginForm("EditPatient", "Patient", FormMethod.Post, new {
	enctype = "multipart/form-data", @class = "form-horizontal"
}))
{ 
	<div id="editPatientModal"
		class="modal hide @Html.Raw(ViewBag.UploadAlert == null ? "fade" : "")"
		tabindex="-1" role="dialog"
		aria-labelledby="newPatientLabel" aria-hidden="true" >
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
			<h3 id="editPatientLabel">Edit Patient Information</h3>
		</div>
		<form class="form-horizontal" method="post" enctype="multipart/form-data">
			<div class="modal-body">
				<div class="control-group">
					<label class="control-label" for="PatientAge">
						Age
					</label>
					<div class="controls">	
						<input type="text" id="PatientAge" name="PatientAge" 		
							value="@Html.DisplayFor(m => Model.Age, new { required ="true", @class = "Age" })" required />							
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientGender">
						Gender
					</label>
					<div class="controls">	
						<input type="text" id="PatientGender" name="PatientGender" 		
							value="@Html.DisplayFor(m => Model.Gender, new { required ="true", @class = "Gender" })"  required />							
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientHeight">
						Height (inches)
					</label>
					<div class="controls">	
						<input type="text" id="PatientHeight" name="PatientHeight" 		
							value="@Html.DisplayFor(m => Model.Height, new { required ="true", @class = "Height" })" required />							
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientWeight">
						Weight (lbs)
					</label>
					<div class="controls">	
						<input type="text" id="PatientWeight" name="PatientWeight" 		
							value="@Html.DisplayFor(m => Model.Weight, new { required ="true", @class = "Weight" })" required />							
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientArthritisType">
						Arthritis Type
					</label>
					<div class="controls">
						<input type="text" id="PatientArthritisType" name="PatientArthritisType"
							value="@Html.DisplayFor(m => Model.ArthritisType, new { required ="true", @class = "ArthritisType" })" required />
					</div>
					<div style="text-align: center">
						<p>(unicompartmental, bicompartmental, or patellofemoral)</p>
					</div>
				</div>
				
				<div class="control-group">
					<label class="control-label" for="PatientAffectedExtremity">
						Affected Extremity <br />(left, right, or both)
					</label>
					<div class="controls">	
						<input type="text" id="PatientAffectedExtremity" name="PatientAffectedExtremity" 		
							value="@Html.DisplayFor(m => Model.AffectedExtremity, new { required ="true", @class = "AffectedExtremity" })" required />							
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientDeformity">
						Deformity <br /> (valgus or varus)
					</label>
					<div class="controls">
						<input type="text" id="PatientDeformity" name="PatientDeformity"
							value="@Html.DisplayFor(m => Model.Deformity, new { required ="true", @class = "Deformity" })" required />
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientEmail">
						Email
					</label>
					<div class="controls">	
						<input type="text" id="PatientEmail" name="PatientEmail" 		
							value="@Html.DisplayFor(m => Model.Email, new { required ="true", @class = "Email" })" required />							
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientPhoneNumber">
						Phone Number
					</label>
					<div class="controls">	
						<input type="text" id="PatientPhoneNumber" name="PatientPhoneNumber" 		
							value="@Html.DisplayFor(m => Model.PhoneNumber, new { required ="true", @class = "PhoneNumber" })" required />							
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientID"></label>
					<div class="controls">
						@Html.HiddenFor(m => Model.ID, new { placeholder = @Model.ID})	
					</div>
				</div>

			</div>

			@if(ViewBag.UploadAlert != null)
			{ 
				<div class="alert fade in">
					<button type="button" class="close" data-dismiss="alert">x</button>
					@Html.Raw(ViewBag.UploadAlert)
				</div>
			}
			<div class="modal-footer">
				<span class="spinner" style="display: none;"><img src="/Content/img/ajax-loader.gif" /></span>
				<button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
				<button type="submit" class="btn btn-primary">Save Changes</button>
			</div>
		</form>
	</div>
}

@*
@using(Html.BeginForm("editPatient", "Patient", FormMethod.Post, new { enctype = "multipart/form-data" , id = "editPatient"}))
{ 
	{
<!-- Edit a Patient Modal -->
<div id="editPatientModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-header">
	<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
	<h3 id="editPatientLabel">Edit Patient Information</h3>
  </div>
  <div class="modal-body">
	  
	  <div class="control-group">
			<label class="control-label" for="PatientAge">Age</label>
				<div class="controls">					
						@Html.TextBoxFor(m => Model.Age, new { required ="true", @class = "Age" })
					<span class="text-error">@Html.ValidationMessageFor(m => Model.Age)</span>	
				</div>
		</div>
	  
		<div class="control-group">
			<label class="control-label" for="PatientGender">Gender</label>
				<div class="controls">					
						@Html.TextBoxFor(m => Model.Gender, new { required ="true", @class = "Gender" })
					<span class="text-error">@Html.ValidationMessageFor(m => Model.Gender)</span>	
				</div>
		</div>
				
		<div class="control-group">
			<label class="control-label" for="PatientHeight">Height (inches)</label>
				<div class="controls">					
						@Html.TextBoxFor(m => Model.Height, new { required ="true", @class = "Height" })
					<span class="text-error">@Html.ValidationMessageFor(m => Model.Height)</span>	
				</div>
		</div>
			
		<div class="control-group">
			<label class="control-label"for="PatientWeight">Weight (lbs)</label>
				<div class="controls">					
						@Html.TextBoxFor(m => Model.Weight, new { required ="true", @class = "Weight" })
					<span class="text-error">@Html.ValidationMessageFor(m => Model.Weight)</span>	
				</div>
		</div>
				
		<div class="control-group">
				<label class="control-label" for="PatientID"></label>
				<div class="controls">
						@Html.HiddenFor(m => Model.ID, new { placeholder = @Model.ID})	
				</div>
		</div>
  </div>

  <div class="modal-footer">
	<button type="button" class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
	<button type="submit" class="btn btn-primary">Save Changes</button>
  </div>
</div>
	
}
} *@

<div class="container">
	<div class="row">
		<div class="span12" style="padding-top: 10px;">
			<h2 style="margin-bottom: 10px;">Profile  
				<a class="btn btn-primary"
				href="#editPatientModal" data-toggle="modal">
				Edit
			</a> 
			</h2>						
		</div>
	</div>

<div class="row">
<div class="span5" style="padding-top: 10px;">
<html lang="en">
	<head>
		<meta charset="utf-8">
		<title>Patient Information</title>
		<meta name="description" content="Patient Information">
		<link href="/twitter-bootstrap/twitter-bootstrap-v2/docs/assets/css/bootstrap.css" rel="stylesheet">			
	</head>
	<body>
	<table class="table table-striped table-bordered table-condensed">
		<tbody>
			<tr>
				<td>Patient Name:</td>
				<td>@Html.DisplayFor(m => Model.LastName, new { placeholder = @Model.LastName}), @Html.DisplayFor(m => Model.FirstName, new { placeholder = @Model.FirstName})</td>
			</tr>
			<tr>
				<td>Started KOAALA:</td>
				<td>@Html.DisplayFor(m => Model.LastUpdate, new { placeholder = @Model.LastUpdate})</td>
			</tr>
			<tr>
				<td>Age:</td>
				<td>@Html.DisplayFor(m => Model.Age, new { placeholder = @Model.Age})</td>
			</tr>
			<tr>
				<td>Gender:</td>
				<td>@Html.DisplayFor(m => Model.Gender, new { placeholder = @Model.Gender})</td>
			</tr>
			<tr>
				<td>Height (inches):</td>
				<td>@Html.DisplayFor(m => Model.Height, new { placeholder = @Model.Height})</td>
			</tr>
			<tr>
				<td>Weight (lbs):</td>
				<td>@Html.DisplayFor(m => Model.Weight, new { placeholder = @Model.Weight})</td>
			</tr>
			<tr>
				<td>Arthritis Type:</td>
				<td>@Html.DisplayFor(m => Model.ArthritisType, new { placeholder = @Model.ArthritisType})</td>
			</tr>
			<tr>
				<td>Affected Extremity:</td>
				<td>@Html.DisplayFor(m => Model.AffectedExtremity, new { placeholder = @Model.AffectedExtremity})</td>
			</tr>
			<tr>
				<td>Deformity:</td>
				<td>@Html.DisplayFor(m => Model.Deformity, new { placeholder = @Model.Deformity})</td>
			</tr>
			<tr>
				<td>Phone Number:</td>
				<td>@Html.DisplayFor(m => Model.PhoneNumber, new { placeholder = @Model.PhoneNumber})</td>
			</tr>
			<tr>
				<td>Email:</td>
				<td>@Html.DisplayFor(m => Model.Email, new { placeholder = @Model.Email})</td>
			</tr>
		</tbody>
	</table>
	</body>
</html>
</div>
</div>

	<div class="row" style="font-size: 9px; color: #999; text-align: center;">
		<div class="span12"></div>
			<br />
			The KOAALAClinic is a prototype system; Madonna Rehabilitation Hospital takes no liability for use of this software
			| <a href="email:katerilett@gmail.com">Contact Us</a>
			| © 2013 
	</div>
</div>




	