@model LocomotionWebApp.Models.ViewModels.PatientViewModel


@section Title
{
	Report	
}

@section Header
{
	<div class="nav pull-right">
		<a class="btn"
			href="#addReport" data-toggle="modal">
			Upload File
			<i class="icon-file"></i>
		</a>
	</div> 
}

@section Scripts
{
	@if(ViewBag.UploadAlert != null)
	{
	<script type="text/javascript">
		//var isFormValid = ;
		$(function() {
			$('#addReport').modal('show');
		});
	</script>
	}

	@if(ViewBag.UrlUploadAlert != null)
	{
	<script type="text/javascript">
		//var isFormValid = ;
		$(function() {
			$('#editRequiredModal').modal('show');
		});
	</script>
	}

	<script type="text/javascript">
		$(function() {
			$("#uploadButton").add("#createNetUrlBtn")
				.click(function(e)
				{
					$(this).closest(".modal-footer").find(".spinner").show();
					$(this).parent().find("button").addClass("disabled");
					$(this).attr("type", "button");
					$(this).unbind("click");
					$(this).closest("form").submit();
				}
			);
		});
	</script>

	<script type="text/javascript">
		$(document).ready(function () {

			$('#collapseOne').on('hide', function () {
				$(".gaitDataTables").removeClass("icon-chevron-up").addClass("icon-chevron-down");
			})
			$('#collapseOne').on('show', function () {
				$(".gaitDataTables").removeClass("icon-chevron-down").addClass("icon-chevron-up");
			})
			$('#collapseTwo').on('hide', function () {
				$(".trends").removeClass("icon-chevron-up").addClass("icon-chevron-down");
			})
			$('#collapseTwo').on('show', function () {
				$(".trends").removeClass("icon-chevron-down").addClass("icon-chevron-up");
			})
			$('#collapseThree').on('hide', function () {
				$(".functionalTests").removeClass("icon-chevron-up").addClass("icon-chevron-down");
			})
			$('#collapseThree').on('show', function () {
				$(".functionalTests").removeClass("icon-chevron-down").addClass("icon-chevron-up");
			})
			$('#collapseFour').on('hide', function () {
				$(".activityBreakdown").removeClass("icon-chevron-up").addClass("icon-chevron-down");
			})
			$('#collapseFour').on('show', function () {
				$(".activityBreakdown").removeClass("icon-chevron-down").addClass("icon-chevron-up");
			})
		});
	</script>

	<!--Gauges-->
	<script type="text/javascript">
		$(function () {
			$('#container').highcharts({
				chart: {
					type: 'gauge',
					plotBorderWidth: 1,
					plotBackgroundColor: {
						linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
						stops: [
							[0, '#f5f5f5'],
							[0.3, '#FFFFFF'],
							[1, '#f5f5f5']
						]
					},
					plotBackgroundImage: null,
					height: 200
				},
				title: {
					text: 'Stance (% of GC)'
				},
				pane: [{
					startAngle: -45,
					endAngle: 45,
					background: null,
					center: ['25%', '145%'],
					size: 300
				}, {
					startAngle: -45,
					endAngle: 45,
					background: null,
					center: ['75%', '145%'],
					size: 300
				}],
				yAxis: [{
					min: 0,
					max: 1,
					minorTickPosition: 'outside',
					tickPosition: 'outside',
					labels: {
						rotation: 'auto',
						distance: 20
					},
					plotBands: [{
						from: 0.56,
						to: 0.64,
						color: '#228b22',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.64,
						to: 0.75,
						color: '#ffd700',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.45,
						to: 0.56,
						color: '#ffd700',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.75,
						to: 0.9,
						color: '#C02316',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.30,
						to: 0.45,
						color: '#C02316',
						innerRadius: '100%',
						outerRadius: '105%'
					}, ],
					pane: 0,
					title: {
						text: 'Left',
						y: -40
					}
				}, {
					min: 0,
					max: 1,
					minorTickPosition: 'outside',
					tickPosition: 'outside',
					labels: {
						rotation: 'auto',
						distance: 20,
					},
					plotBands: [{
						from: 0.56,
						to: 0.64,
						color: '#228b22',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.64,
						to: 0.75,
						color: '#ffd700',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.45,
						to: 0.56,
						color: '#ffd700',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.75,
						to: 0.9,
						color: '#C02316',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.30,
						to: 0.45,
						color: '#C02316',
						innerRadius: '100%',
						outerRadius: '105%'
					}],
					pane: 1,
					title: {
						text: 'Right',
						y: -40
					}
				}],
				plotOptions: {
					gauge: {
						dataLabels: {
							enabled: true,
							color: 'black',
							style: { fontFamily: 'Helvetica Neue' }
						},
						dial: {
							radius: '100%'
						}
					}
				},
				series: [{
					data: [0.792],
					yAxis: 0
				}, {
					data: [0.758],
					yAxis: 1
				}]
			},

			// Let the music play
			function (chart) {

			});
		});
	</script>

	<script type="text/javascript">
		$(function () {
			$('#container2').highcharts({
				chart: {
					type: 'gauge',
					plotBorderWidth: 1,
					plotBackgroundColor: {
						linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
						stops: [
							[0, '#f5f5f5'],
							[0.3, '#FFFFFF'],
							[1, '#f5f5f5']
						]
					},
					plotBackgroundImage: null,
					height: 200
				},
				title: {
					text: 'Swing (% of GC)'
				},
				pane: [{
					startAngle: -45,
					endAngle: 45,
					background: null,
					center: ['25%', '145%'],
					size: 300
				}, {
					startAngle: -45,
					endAngle: 45,
					background: null,
					center: ['75%', '145%'],
					size: 300
				}],
				yAxis: [{
					min: 0,
					max: 1,
					minorTickPosition: 'outside',
					tickPosition: 'outside',
					labels: {
						rotation: 'auto',
						distance: 20
					},
					plotBands: [{
						from: 0.36,
						to: 0.44,
						color: '#228b22',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.44,
						to: 0.54,
						color: '#ffd700',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.26,
						to: 0.36,
						color: '#ffd700',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.54,
						to: 0.64,
						color: '#C02316',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.16,
						to: 0.26,
						color: '#C02316',
						innerRadius: '100%',
						outerRadius: '105%'
					}, ],
					pane: 0,
					title: {
						text: 'Left',
						y: -40
					}
				}, {
					min: 0,
					max: 1,
					minorTickPosition: 'outside',
					tickPosition: 'outside',
					labels: {
						rotation: 'auto',
						distance: 20,
					},
					plotBands: [{
						from: 0.36,
						to: 0.44,
						color: '#228b22',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.44,
						to: 0.54,
						color: '#ffd700',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.26,
						to: 0.36,
						color: '#ffd700',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.54,
						to: 0.64,
						color: '#C02316',
						innerRadius: '100%',
						outerRadius: '105%'
					}, {
						from: 0.16,
						to: 0.26,
						color: '#C02316',
						innerRadius: '100%',
						outerRadius: '105%'
					}],
					pane: 1,
					title: {
						text: 'Right',
						y: -40
					}
				}],
				plotOptions: {
					gauge: {
						dataLabels: {
							enabled: true,
							color: 'black',
							style: { fontFamily: 'Helvetica Neue' }
						},
						dial: {
							radius: '100%'
						}
					}
				},
				series: [{
					data: [0.38],
					yAxis: 0
				}, {
					data: [0.37],
					yAxis: 1
				}]
			},

			// Let the music play
			function (chart) {

			});
		});
	</script>

	<script type="text/javascript">
		$(function () {
			$.getJSON('http://www.highcharts.com/samples/data/jsonp.php?filename=usdeur.json&callback=?', function (data) {
				// Create the chart
				$('#container3').highcharts('StockChart', {

					rangeSelector: {
						selected: 1
					},

					title: {
						text: 'Distance Walked'
					},

					yAxis: {
						title: {
							text: 'Distance (miles)'
						},
						plotLines: [{
							value: 0.7419,
							color: 'green',
							dashStyle: 'shortdash',
							width: 2,
							label: {
								text: 'Distance Goal'
							}
						}]
					},

					series: [{
						name: 'Distance (miles)',
						data: data,
						tooltip: {
							valueDecimals: 4
						}
					}]
				});
			});
		});
	</script>

	<script type="text/javascript">
		$(function () {
			$.getJSON('http://www.highcharts.com/samples/data/jsonp.php?filename=aapl-v.json&callback=?', function (data) {

				// create the chart
				$('#container4').highcharts('StockChart', {
					chart: {
						alignTicks: false
					},

					rangeSelector: {
						selected: 1
					},

					title: {
						text: 'Number of Steps'
					},

					yAxis: {
						plotLines: [{
							value: 17000000,
							color: 'green',
							dashStyle: 'shortdash',
							width: 2,
							label: {
								text: 'Goal'
							}
						}]
					},

					series: [{
						type: 'column',
						name: 'Number of Steps',
						data: data,
						dataGrouping: {
							units: [[
								'week', // unit name
								[1] // allowed multiples
							], [
								'month',
								[1, 2, 3, 4, 6]
							]]
						}
					}]
				});
			});
		});
	</script>

	<script type="text/javascript">
		$(function () {
			var seriesOptions = [],
				yAxisOptions = [],
				seriesCounter = 0,
				names = ['MSFT', 'AAPL', 'GOOG'],
				colors = Highcharts.getOptions().colors;

			$.each(names, function (i, name) {

				$.getJSON('http://www.highcharts.com/samples/data/jsonp.php?filename=' + name.toLowerCase() + '-c.json&callback=?', function (data) {

					seriesOptions[i] = {
						name: name,
						data: data
					};
					// As we're loading the data asynchronously, we don't know what order it will arrive. So
					// we keep a counter and create the chart when all the data is loaded.
					seriesCounter++;

					if (seriesCounter == names.length) {
						createChart();
					}
				});
			});

			// create the chart when all data is loaded
			function createChart() {

				$('#container5').highcharts('StockChart', {
					chart: {
					},

					rangeSelector: {
						selected: 4
					},

					yAxis: {
						labels: {
							formatter: function () {
								return (this.value > 0 ? '+' : '') + this.value + '%';
							}
						},
						plotLines: [{
							value: 0,
							width: 2,
							color: 'silver'
						}]
					},

					plotOptions: {
						series: {
							compare: 'percent'
						}
					},

					tooltip: {
						pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.change}%)<br/>',
						valueDecimals: 2
					},

					series: seriesOptions
				});
			}

		});
	</script>

}

@using (Html.BeginForm("Upload", "Patient", FormMethod.Post, new
{
	enctype = "multipart/form-data", @class = "form-horizontal"
}))
{ 
	<div id="addReport"
		class="modal hide @Html.Raw(ViewBag.UploadAlert == null ? "fade" : "")"
		tabindex="-1" role="dialog"
		aria-labelledby="newPatientLabel" aria-hidden="true" >
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
			<h3 id="newPatientLabel">Upload File</h3>
		</div>
		<form class="form-horizontal" method="post" enctype="multipart/form-data">
			<div class="modal-body">

				<div class="control-group">
					<label class="control-label" for="PatientFile">
						<b>Patient File</b>
					</label>
					<div class="controls">
						<input type="file" id="PatientFile" name="PatientFile" /><br />
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientID"></label>
					<div class="controls">
						@Html.HiddenFor(m => Model.ID, new { placeholder = @Model.ID})	
					</div>
				</div>
			</div>

			@if(ViewBag.UploadAlert != null)
			{ 
				<div class="alert fade in">
					<button type="button" class="close" data-dismiss="alert">x</button>
					@Html.Raw(ViewBag.UploadAlert)
				</div>
			}
			<div class="modal-footer">
				<span class="spinner" style="display: none;"><img src="/Content/img/ajax-loader.gif" /></span>
				<button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
				<button type="submit" id="uploadButton" class="btn btn-primary">Submit</button>
			</div>
		</form>
	</div>
}

@using(Html.BeginForm("EditRequired", "Patient", FormMethod.Post, new {
	enctype = "multipart/form-data", @class = "form-horizontal"
}))
{ 
	<div id="editRequiredModal"
		class="modal hide @Html.Raw(ViewBag.UploadAlert == null ? "fade" : "")"
		tabindex="-1" role="dialog"
		aria-labelledby="newPatientLabel" aria-hidden="true" >
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
			<h3 id="editRequiredLabel">Edit Required Inputs</h3>
		</div>
		<form class="form-horizontal" method="post" enctype="multipart/form-data">
			<div class="modal-body">
				<div class="control-group">
					<label class="control-label" for="PatientShanklength">
						Shank Length (cm)
					</label>
					<div class="controls">	
						<input type="text" id="PatientShankLength" name="PatientShankLength" 		
							value="@Html.DisplayFor(m => Model.ShankLength, new { required ="true", @class = "ShankLength" })" required />							
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientThighLength">
						Thigh Length (cm)
					</label>
					<div class="controls">	
						<input type="text" id="PatientThighLength" name="PatientThighlength" 		
							value="@Html.DisplayFor(m => Model.ThighLength, new { required ="true", @class = "ThighLength" })"  required />							
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientID"></label>
					<div class="controls">
						@Html.HiddenFor(m => Model.ID, new { placeholder = @Model.ID})	
					</div>
				</div>
			</div>

			@if(ViewBag.UploadAlert != null)
			{ 
				<div class="alert fade in">
					<button type="button" class="close" data-dismiss="alert">x</button>
					@Html.Raw(ViewBag.UploadAlert)
				</div>
			}
			<div class="modal-footer">
				<span class="spinner" style="display: none;"><img src="/Content/img/ajax-loader.gif" /></span>
				<button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
				<button type="submit" class="btn btn-primary">Save Changes</button>
			</div>
		</form>
	</div>
}

<!-- Html for Report -->
<div class="container">
	<div class="row-fluid">
		<div class="span12">
			<div class="well">
				<div class="span6" style="font-size: 31.5px;">
					<strong>@Html.DisplayFor(m => Model.LastName, new { placeholder = @Model.LastName }), 
						@Html.DisplayFor(m => Model.FirstName, new { placeholder = @Model.FirstName })</strong>
					@*<div class="btn-group" style="margin-left: 20px;">
						<button class="btn btn-small">d</button>
						<button class="btn btn-small">wk</button>
						<button class="btn disabled btn-small">mo</button>
						<button class="btn btn-small">3mo</button>
						<button class="btn btn-small">6mo</button>
						<button class="btn btn-small">yr</button>
					</div>*@
				</div>
				<div class="span1 offset4">
					<div class="btn-group">
						<a href="@Url.Action("View", "Patient", new { id = Model.ID })"
						class="btn btn-primary"><strong>Profile</strong></a>
						<a href="#" class="btn disabled" id="show-report-btn"><strong>Report</strong></a>
					</div>
				</div>
			</div>
		</div>
	</div>
	<div class="accordion" id="accordion2">
		<div class="accordion-group">
			<div class="accordion-heading">
				<a class="accordion-toggle" data-toggle="collapse" data-parent="accordion2" href="#collapseOne">
					<i class="icon-chevron-up gaitDataTables" id="icon-element"></i> Overview
				</a>
			</div>
			<div id="collapseOne" class="accordion-body collapse in">
				<div class="accordion-inner">
					<div class="row">						
						<div class="span3" style="padding-bottom: 5px; margin-left: 60px;">
							<h4>Brace Information</h4>
							<table class="table table-striped table-bordered table-condensed" border="1">
								<tbody>
									<tr class="success">
										<td><strong>Brace Working</strong></td>
										<td><strong>Yes</strong></td>
									</tr>
									<tr class="error">
										<td><strong>This Week's Usage Grade</strong></td>
										<td ><strong>C+</strong></td>
									</tr>
									<tr>
								</tbody>
							</table>
							<br />
							<h4>Time Worn: </h4>
							<div style="height: 200px; overflow:auto;">
							<table class="table table-striped table-bordered table-condensed" border="1">
								<thead>
									<tr>
										<td><strong>Date</strong></td>
										<td><strong>Hours Active</strong></td>
									</tr>
								</thead>
								<tbody>
									<tr>
										<td><strong>7/15/2013</strong></td>
										<td><strong>6.5</strong></td>
									</tr>
									<tr>
										<td><strong>7/14/2013</strong></td>
										<td><strong>6.1</strong></td>
									</tr>
									<tr>
										<td><strong>7/13/2013</strong></td>
										<td><strong>6.3</strong></td>
									</tr>
									<tr>
										<td><strong>7/12/2013</strong></td>
										<td><strong>1.4</strong></td>
									</tr>
									<tr>
										<td><strong>7/11/2013</strong></td>
										<td><strong>3.5</strong></td>
									</tr>
									<tr>
										<td><strong>7/10/2013</strong></td>
										<td><strong>5.5</strong></td>
									</tr>
									<tr>
										<td><strong>7/9/2013</strong></td>
										<td><strong>6.6</strong></td>
									</tr>
									<tr>
										<td><strong>7/8/2013</strong></td>
										<td><strong>6.6</strong></td>
									</tr>
									<tr>
										<td><strong>7/7/2013</strong></td>
										<td><strong>6.6</strong></td>
									</tr>
									<tr>
										<td><strong>7/6/2013</strong></td>
										<td><strong>6.6</strong></td>
									</tr>
									<tr>
										<td><strong>7/5/2013</strong></td>
										<td><strong>6.6</strong></td>
									</tr>
									<tr>
										<td><strong>7/4/2013</strong></td>
										<td><strong>6.6</strong></td>
									</tr>
								</tbody>
							</table>
							</div>
						</div>
						<div class="span8" id="container4" style="height: 450px; padding-bottom: 5px;"></div>
					</div>
					<div class="row" style="margin-top: 20px;">						
						<div class="span10" id="container3" style="height: 500px;"></div>
					</div>
				</div>
			</div>
		</div>
		<div class="accordion-group">
			<div class="accordion-heading">
				<a class="accordion-toggle" data-toggle="collapse" data-parent="accordion2" href="#collapseTwo">
					<i class="icon-chevron-down trends"></i> Gauges
				</a>
			</div>
			<div id="collapseTwo" class="accordion-body collapse">
				<div class="accordion-inner">
					<div class="row">
						<div class="span6" id="container" style="float: left; color: black; width: 550px; height: 300px; margin-left: 15px;"></div>
						<div class="span6" id="container2" style="color: black; width: 550px; height: 300px; margin-left: 15px;"></div>
					</div>					
				</div>
			</div>
		</div>
		<div class="accordion-group">
			<div class="accordion-heading">
				<a class="accordion-toggle" data-toggle="collapse" data-parent="accordion2" href="#collapseThree">
					<i class="icon-chevron-down functionalTests"></i> Walk Tests
				</a>
			</div>
			<div id="collapseThree" class="accordion-body collapse">
				<div class="accordion-inner">
					<div class="span3" style="padding-bottom: 5px;">
							<h4>Gait Data</h4>
							<table class="table table-striped table-bordered table-condensed" border="1">
								<tbody>
									<tr>
										<td><strong>Average Gait Speed (meters/min)</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.AverageGaitSpeed, new { placeholder = @Model.Report.AverageGaitSpeed })</strong></td>
									</tr>
									<tr>
										<td><strong>Candence (steps/min)</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.Candence, new { placeholder = @Model.Report.Candence })</strong></td>
									</tr>
									<tr>
										<td><strong>Stride Time (sec)</strong></td>
										<td><i class="icon-minus"></i></td>
									</tr>
									<tr>
										<td><strong>Step Time (sec)</strong></td>
										<td><i class="icon-minus"></i></td>
									</tr>
								</tbody>
							</table>
							<br />
							<h4>Limb Values</h4>
							<table class="table table-striped table-bordered table-condensed" border="1">
								<thead>
									<tr>
										<td></td>
										<td><strong>Left</strong></td>
										<td><strong>Right</strong></td>
									</tr>
								</thead>
								<tbody>
									<tr>
										<td><strong>Number of Strides</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.LStrideNumber, new { placeholder = @Model.Report.LStrideNumber })</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.RStrideNumber, new { placeholder = @Model.Report.RStrideNumber })</strong></td>
									</tr>
									<tr>
										<td><strong>Stride Length (cm)</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.LeftStrideLength, new { placeholder = @Model.Report.LeftStrideLength })</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.RightStrideLength, new { placeholder = @Model.Report.RightStrideLength })</strong></td>
									</tr>
									<tr>
										<td><strong>Stance</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.LStancePercent, new { placeholder = @Model.Report.LStancePercent }) %</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.RStancePercent, new { placeholder = @Model.Report.RStancePercent }) %</strong></td>
									</tr>
									<tr>
										<td><strong>Swing</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.LSwingPercent, new { placeholder = @Model.Report.LSwingPercent }) %</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.RSwingPercent, new { placeholder = @Model.Report.RSwingPercent }) %</strong></td>
									</tr>
									<tr>
										<td><strong>Single Limb Stance</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.LSingleLimbStancePercent, new { placeholder = @Model.Report.LSingleLimbStancePercent }) %</strong></td>
										<td><strong>@Html.DisplayFor(m => Model.Report.RSingleLimbStancePercent, new { placeholder = @Model.Report.RSingleLimbStancePercent }) %</strong></td>
									</tr>
								</tbody>
							</table>
							<br />
								<h4>Required Inputs 
								<a class="btn btn-primary btn-small"
									href="#editRequiredModal" data-toggle="modal" style="float: right;">Edit
								</a>
							</h4>
							<table class="table table-striped table-bordered table-condensed" border="1">
								<tbody>
									<tr>
										<td><strong>Shank length (cm)
											<a href="#" rel="tooltip" title="How to measure shank length: place instructions here"><i class="icon-question-sign"></i></a>
										</strong></td>
										@if (Model.ShankLength != 0) {
											<td><strong>@Html.DisplayFor(m => Model.ShankLength, new { placeholder = @Model.ShankLength })</strong></td>
										}
										@if (Model.ShankLength == 0)
										{
											<td><i class="icon-minus"></i></td>
										}
									</tr>
									<tr>
										<td><strong>Thigh length (cm)
											<a href="#" rel="tooltip" title="How to measure thigh length: place instructions here"><i class="icon-question-sign"></i></a>
										</strong></td>
										@if (Model.ThighLength != 0) {
											<td><strong>@Html.DisplayFor(m => Model.ThighLength, new { placeholder = @Model.ThighLength })</strong></td>
										}
										@if (Model.ThighLength == 0)
										{
											<td><i class="icon-minus"></i></td>
										}
									</tr>
								</tbody>
							</table>
						</div>
						<div class="span8">
							<h4>Stance, Swing, and Single Limb Stance Percentages</h4>
							<div id="container5" style="height: 400px; min-width: 600px;"></div>
						</div>
				</div>
			</div>
		</div>
		<div class="accordion-group">
			<div class="accordion-heading">
				<a class="accordion-toggle" data-toggle="collapse" data-parent="accordion2" href="#collapseFour">
					<i class="icon-chevron-down activityBreakdown"></i> Activity Breakdown
				</a>
			</div>
			<div id="collapseFour" class="accordion-body collapse">
				<div class="accordion-inner">
					<h4>Activity Breakdown</h4>
				</div>
			</div>
		</div>
	</div>
	<div class="row" style="font-size: 9px; color: #999; text-align: center;">
		<div class="span12"></div>
		<br />
		The KOAALAClinic is a prototype; Madonna Rehabilitation Hospital takes no liability for use of this software
			| <a href="email:katerilett@gmail.com">Contact Us</a>
		| © 2013 
	</div>
</div>

