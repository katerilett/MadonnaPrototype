@model LocomotionWebApp.Models.ViewModels.PatientViewModel


@section Title
{
	Report	
}

@section Header
{
	<div class="nav pull-right">
		<a class="btn"
			href="#addReport" data-toggle="modal">
			@*<i class="icon-plus-sign"></i>*@
			Upload File
			<i class="icon-file"></i>
		</a>
	</div> 
}

@section Scripts
{
	@if(ViewBag.UploadAlert != null)
	{
	<script type="text/javascript">
		//var isFormValid = ;
		$(function() {
			$('#addReport').modal('show');
		});
	</script>
	}

	@if(ViewBag.UrlUploadAlert != null)
	{
	<script type="text/javascript">
		//var isFormValid = ;
		$(function() {
			$('#editRequiredModal').modal('show');
		});
	</script>
	}

	<script type="text/javascript">
		$(function() {
			$("#uploadButton").add("#createNetUrlBtn")
				.click(function(e)
				{
					$(this).closest(".modal-footer").find(".spinner").show();
					$(this).parent().find("button").addClass("disabled");
					$(this).attr("type", "button");
					$(this).unbind("click");
					$(this).closest("form").submit();
				}
			);
		});
	</script>

	<script type="text/javascript">
	$(function () {
	$('#container').highcharts({
	
	    chart: {
	        type: 'gauge',
	        plotBorderWidth: 1,
	        plotBackgroundColor: {
	        	linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
	        	stops: [
	        		[0, '#f5f5f5'],
	        		[0.3, '#FFFFFF'],
	        		[1, '#f5f5f5']
	        	]
	        },
	        plotBackgroundImage: null,
	        height: 200
	    },
	
	    title: {
	        text: 'Stance (% of GC)'
	    },
	    
	    pane: [{
	        startAngle: -45,
	        endAngle: 45,
	        background: null,
	        center: ['25%', '145%'],
	        size: 300
	    }, {
	    	startAngle: -45,
	    	endAngle: 45,
	    	background: null,
	        center: ['75%', '145%'],
	        size: 300
	    }],	    		        
	
	    yAxis: [{
	        min: 0,
	        max: 1,
	        minorTickPosition: 'outside',
	        tickPosition: 'outside',
	        labels: {
	        	rotation: 'auto',
	        	distance: 20
	        },
	        plotBands: [{
	        	from: 0.56,
	        	to: 0.64,
	        	color: '#228b22',
	        	innerRadius: '100%',
	        	outerRadius: '105%'
	        }, {
	        	from: 0.64,
	        	to: 0.75,
	        	color: '#ffd700',
	        	innerRadius: '100%',
	        	outerRadius: '105%'
	        }, {
	        	from: 0.45,
	        	to: 0.56,
	        	color: '#ffd700',
	        	innerRadius: '100%',
	        	outerRadius: '105%'
	        }, {
	        	from: 0.75,
	        	to: 0.9,
	        	color: '#C02316',
	        	innerRadius: '100%',
	        	outerRadius: '105%'
	        }, {
	        	from: 0.30,
	        	to: 0.45,
	        	color: '#C02316',
	        	innerRadius: '100%',
	        	outerRadius: '105%'
	        },],
	        pane: 0,
	        title: {
	        	text: 'Stance<br/><span style="font-size:8px">Left</span>',
	        	y: -40
	        }
	    }, {
	        min: 0,
	        max: 1,
	        minorTickPosition: 'outside',
	        tickPosition: 'outside',
	        labels: {
	        	rotation: 'auto',
	        	distance: 20,
	        },
	        plotBands: [{
	        	from: 0.56,
	        	to: 0.64,
	        	color: '#228b22',
	        	innerRadius: '100%',
	        	outerRadius: '105%'
	        }, {
	        	from: 0.64,
	        	to: 0.75,
	        	color: '#ffd700',
	        	innerRadius: '100%',
	        	outerRadius: '105%'
	        }, {
	        	from: 0.45,
	        	to: 0.56,
	        	color: '#ffd700',
	        	innerRadius: '100%',
	        	outerRadius: '105%'
	        }, {
	        	from: 0.75,
	        	to: 0.9,
	        	color: '#C02316',
	        	innerRadius: '100%',
	        	outerRadius: '105%'
	        }, {
	        	from: 0.30,
	        	to: 0.45,
	        	color: '#C02316',
	        	innerRadius: '100%',
	        	outerRadius: '105%'
	        }],
	        pane: 1,
	        title: {
	        	text: 'Stance<br/><span style="font-size:8px">Right</span>',
	        	y: -40
	        }
	    }],
	    
	    plotOptions: {
	    	gauge: {
	    		dataLabels: {
	    			enabled: true,
	    			color: 'black',
	    			style: { fontFamily: '"Helvetica Neue", Helvetica, Arial, sans-serif' }
	    		},
	    		dial: {
	    			radius: '100%'
	    		}
	    	}
	    },
	    	
	
	    series: [{
	        data: [0.792],
	        yAxis: 0
	    }, {
	        data: [0.758],
	        yAxis: 1
	    }]
	
	},
	
	// Let the music play
	function(chart) {
	
	});
});
</script>


}




@using (Html.BeginForm("Upload", "Patient", FormMethod.Post, new
{
	enctype = "multipart/form-data", @class = "form-horizontal"
}))
{ 
	<div id="addReport"
		class="modal hide @Html.Raw(ViewBag.UploadAlert == null ? "fade" : "")"
		tabindex="-1" role="dialog"
		aria-labelledby="newPatientLabel" aria-hidden="true" >
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
			<h3 id="newPatientLabel">Upload File</h3>
		</div>
		<form class="form-horizontal" method="post" enctype="multipart/form-data">
			<div class="modal-body">

				<div class="control-group">
					<label class="control-label" for="PatientFile">
						<b>Patient File</b>
					</label>
					<div class="controls">
						<input type="file" id="PatientFile" name="PatientFile" /><br />
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientID"></label>
					<div class="controls">
						@Html.HiddenFor(m => Model.ID, new { placeholder = @Model.ID})	
					</div>
				</div>
			</div>

			@if(ViewBag.UploadAlert != null)
			{ 
				<div class="alert fade in">
					<button type="button" class="close" data-dismiss="alert">x</button>
					@Html.Raw(ViewBag.UploadAlert)
				</div>
			}
			<div class="modal-footer">
				<span class="spinner" style="display: none;"><img src="/Content/img/ajax-loader.gif" /></span>
				<button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
				<button type="submit" id="uploadButton" class="btn btn-primary">Submit</button>
			</div>
		</form>
	</div>
}

@using(Html.BeginForm("EditRequired", "Patient", FormMethod.Post, new {
	enctype = "multipart/form-data", @class = "form-horizontal"
}))
{ 
	<div id="editRequiredModal"
		class="modal hide @Html.Raw(ViewBag.UploadAlert == null ? "fade" : "")"
		tabindex="-1" role="dialog"
		aria-labelledby="newPatientLabel" aria-hidden="true" >
		<div class="modal-header">
			<button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
			<h3 id="editRequiredLabel">Edit Required Inputs</h3>
		</div>
		<form class="form-horizontal" method="post" enctype="multipart/form-data">
			<div class="modal-body">
				<div class="control-group">
					<label class="control-label" for="PatientShanklength">
						Shank Length (cm)
					</label>
					<div class="controls">	
						<input type="text" id="PatientShankLength" name="PatientShankLength" 		
							value="@Html.DisplayFor(m => Model.ShankLength, new { required ="true", @class = "ShankLength" })" required />							
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientThighLength">
						Thigh Length (cm)
					</label>
					<div class="controls">	
						<input type="text" id="PatientThighLength" name="PatientThighlength" 		
							value="@Html.DisplayFor(m => Model.ThighLength, new { required ="true", @class = "ThighLength" })"  required />							
					</div>
				</div>
				<div class="control-group">
					<label class="control-label" for="PatientID"></label>
					<div class="controls">
						@Html.HiddenFor(m => Model.ID, new { placeholder = @Model.ID})	
					</div>
				</div>
			</div>

			@if(ViewBag.UploadAlert != null)
			{ 
				<div class="alert fade in">
					<button type="button" class="close" data-dismiss="alert">x</button>
					@Html.Raw(ViewBag.UploadAlert)
				</div>
			}
			<div class="modal-footer">
				<span class="spinner" style="display: none;"><img src="/Content/img/ajax-loader.gif" /></span>
				<button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>
				<button type="submit" class="btn btn-primary">Save Changes</button>
			</div>
		</form>
	</div>
}

<div class="container">
	<div class="row-fluid">
		<div class="span12">
		<div class="well">
			<div class="span6" style="font-size: 31.5px;">
				<strong>@Html.DisplayFor(m => Model.LastName, new { placeholder = @Model.LastName}), @Html.DisplayFor(m => Model.FirstName, new { placeholder = @Model.FirstName})</strong>
			@*</div>*@
			@*<div class="span3">*@
				<div class="btn-group" style="margin-left: 20px;">
					<button class="btn btn-small">d</button>
					<button class="btn btn-small">wk</button>
					<button class="btn btn-small">mo</button>
					<button class="btn btn-small">3mo</button>
					<button class="btn btn-small">6mo</button>
					<button class="btn btn-small">yr</button>
				</div>
			</div>

			<div class="span1 offset4">
				<div class="btn-group">
					<a href="@Url.Action("View", "Patient", new { id=Model.ID })"
						class="btn btn-primary"><strong>Profile</strong></a>
					<a href="#" class="btn btn-primary disabled" id="show-report-btn"><strong>Records</strong></a>
				</div>
			</div>
		</div>
		</div>
	</div>

	<div class="row">
		<div class="span4" style="padding-bottom: 5px;">
			<h4>Gait Data</h4> 
			<table class="table table-striped table-bordered table-condensed" border="1">
				<tbody>
					<tr>
						<td><strong>Average Gait Speed (meters/min)</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.AverageGaitSpeed, new { placeholder = @Model.Report.AverageGaitSpeed})</strong></td>
					</tr>
					<tr>
						<td><strong>Candence (steps/min)</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.Candence, new { placeholder = @Model.Report.Candence})</strong></td>
					</tr>
				</tbody>
			</table>
			<br />
			<h4>Limb Values</h4> 
			<table class="table table-striped table-bordered table-condensed" border="1">
				<thead>
					<tr>
						<td></td>
						<td><strong>Left</strong></td>
						<td><strong>Right</strong></td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td><strong>Number of Strides</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.LStrideNumber, new { placeholder = @Model.Report.LStrideNumber})</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.RStrideNumber, new { placeholder = @Model.Report.RStrideNumber})</strong></td>
					</tr>
					<tr>
						<td><strong>Stride Length (cm)</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.LeftStrideLength, new { placeholder = @Model.Report.LeftStrideLength})</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.RightStrideLength, new { placeholder = @Model.Report.RightStrideLength})</strong></td>
					</tr>
					<tr>
						<td><strong>Stance (% of gait cycle)</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.LStancePercent, new { placeholder = @Model.Report.LStancePercent })</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.RStancePercent, new { placeholder = @Model.Report.RStancePercent })</strong></td>
					</tr>
					<tr>
						<td><strong>Swing (% of gait cycle)</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.LSwingPercent, new { placeholder = @Model.Report.LSwingPercent})</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.RSwingPercent, new { placeholder = @Model.Report.RSwingPercent})</strong></td>
					</tr>
					<tr>
						<td><strong>Single Limb Stance (% of gait cycle)</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.LSingleLimbStancePercent, new { placeholder = @Model.Report.LSingleLimbStancePercent})</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.Report.RSingleLimbStancePercent, new { placeholder = @Model.Report.RSingleLimbStancePercent})</strong></td>
					</tr>
				</tbody>
			</table>
		</div>
		
		<div class="span4 offset1" style="padding-bottom: 5px;">
			<h4>Required Inputs 
				<a class="btn btn-primary btn-small"
					href="#editRequiredModal" data-toggle="modal" style="float:right;">
					Edit
				</a>
			</h4>
			<table class="table table-striped table-bordered table-condensed" border="1">
			<tbody>
					<tr>
						<td><strong>Shank length (cm)</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.ShankLength, new { placeholder = @Model.ShankLength})</strong></td>
					</tr>
					<tr>
						<td><strong>Thigh length (cm)</strong></td>
						<td><strong>@Html.DisplayFor(m => Model.ThighLength, new { placeholder = @Model.ThighLength})</strong></td>
					</tr>
				</tbody>
			</table>
			<br />
			<script src="http://code.highcharts.com/highcharts.js"></script>
			<script src="http://code.highcharts.com/highcharts-more.js"></script>
			<script src="http://code.highcharts.com/modules/exporting.js"></script>

			<div id="container" style="width: 600px; height: 300px; margin: 0 auto"></div>

		</div>
	</div>

	<div class="row" style="font-size: 9px; color: #999; text-align: center;">
		<div class="span12"></div>
			<br />
			The KOAALAClinic is a prototype; Madonna Rehabilitation Hospital takes no liability for use of this software
			| <a href="email:katerilett@gmail.com">Contact Us</a>
			| © 2013 
	</div>
</div>

